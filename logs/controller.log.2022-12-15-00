[2022-12-15 00:33:56,613] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-15 00:33:56,640] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-12-15 00:33:56,643] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2022-12-15 00:33:56,674] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-12-15 00:33:56,677] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-12-15 00:33:56,680] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-12-15 00:33:56,682] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-12-15 00:33:56,702] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2022-12-15 00:33:56,706] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-15 00:33:56,710] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-12-15 00:33:56,730] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-12-15 00:33:56,731] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-15 00:33:56,731] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-15 00:33:56,731] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-12-15 00:33:56,732] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-12-15 00:33:56,734] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-12-15 00:33:56,734] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-12-15 00:33:56,734] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-12-15 00:33:56,734] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-12-15 00:33:56,735] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-12-15 00:33:56,746] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:33:56,746] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:33:56,749] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:33:56,750] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:33:56,751] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-12-15 00:33:56,751] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-12-15 00:33:56,754] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-12-15 00:33:56,754] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-12-15 00:33:56,759] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-12-15 00:33:56,759] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-12-15 00:33:56,759] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-12-15 00:33:56,760] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-12-15 00:33:56,760] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-12-15 00:33:56,766] INFO [RequestSendThread controllerId=0] Controller 0 connected to H110M:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-12-15 00:33:56,776] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-12-15 00:34:01,776] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-15 00:34:01,777] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-15 00:34:09,959] INFO [Controller id=0] New topics: [Set(quickstart-events)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(quickstart-events,Some(CW6KvEWOSjKVFqGOt6CAZQ),Map(quickstart-events-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-15 00:34:09,961] INFO [Controller id=0] New partition creation callback for quickstart-events-0 (kafka.controller.KafkaController)
[2022-12-15 00:34:15,416] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-12-15 00:34:15,416] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-12-15 00:34:15,417] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-12-15 00:34:15,419] TRACE [Controller id=0] All leaders = quickstart-events-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-12-15 00:34:15,500] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-15 00:34:15,500] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-15 00:34:15,500] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-15 00:34:15,501] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-12-15 00:34:15,501] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-15 00:34:15,502] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-12-15 00:34:15,503] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:34:15,503] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-12-15 00:34:15,503] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-12-15 00:34:15,503] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-12-15 00:34:15,505] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-12-15 00:34:44,820] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-15 00:34:44,848] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-12-15 00:34:44,853] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-12-15 00:34:44,856] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-12-15 00:34:44,859] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-12-15 00:34:44,861] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-12-15 00:34:44,873] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 52) (kafka.controller.KafkaController)
[2022-12-15 00:34:44,890] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-15 00:34:44,913] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-12-15 00:34:44,926] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-12-15 00:34:44,926] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-15 00:34:44,926] INFO [Controller id=0] Current list of topics in the cluster: HashSet(quickstart-events) (kafka.controller.KafkaController)
[2022-12-15 00:34:44,927] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-12-15 00:34:44,931] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-12-15 00:34:44,936] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-12-15 00:34:44,938] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-12-15 00:34:44,938] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-12-15 00:34:44,938] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-12-15 00:34:44,943] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-12-15 00:34:44,980] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:34:44,988] INFO [RequestSendThread controllerId=0] Controller 0 connected to H110M:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-12-15 00:34:45,000] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:34:45,029] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:34:45,029] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=quickstart-events,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-12-15 00:34:45,029] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-12-15 00:34:45,041] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-12-15 00:34:45,046] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(quickstart-events-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-12-15 00:34:45,047] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-12-15 00:34:45,054] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-12-15 00:34:45,054] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-12-15 00:34:45,055] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-12-15 00:34:45,056] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-12-15 00:34:45,057] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-12-15 00:34:45,076] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-12-15 00:34:50,078] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-15 00:34:50,080] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-15 00:34:50,092] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-12-15 00:34:50,095] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-15 00:39:50,096] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-15 00:39:50,097] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-15 00:39:50,097] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-12-15 00:39:50,097] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-15 00:41:31,561] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2022-12-15 00:41:31,567] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2022-12-15 00:41:50,036] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(_aw2RW0PQ--30fOE08mGsA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-15 00:41:50,037] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-12-15 00:42:10,931] INFO [Controller id=0] New topics: [Set(connect-test)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(connect-test,Some(3A1YBK-qQPOW6u5s5m2naQ),Map(connect-test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-15 00:42:10,931] INFO [Controller id=0] New partition creation callback for connect-test-0 (kafka.controller.KafkaController)
[2022-12-15 00:42:39,443] INFO [Controller id=0] New topics: [Set(fulfillment.inventory.customers)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(fulfillment.inventory.customers,Some(uv20LIovRC6GkzLWd_St4A),Map(fulfillment.inventory.customers-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-15 00:42:39,443] INFO [Controller id=0] New partition creation callback for fulfillment.inventory.customers-0 (kafka.controller.KafkaController)
[2022-12-15 00:44:50,098] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-15 00:44:50,098] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-15 00:44:50,099] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-12-15 00:44:50,099] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-15 00:49:50,099] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-15 00:49:50,099] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-15 00:49:50,103] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-12-15 00:49:50,103] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-15 00:54:50,103] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-15 00:54:50,104] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-15 00:54:50,108] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-12-15 00:54:50,108] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-15 00:59:50,110] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-15 00:59:50,110] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-15 00:59:50,112] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-12-15 00:59:50,113] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
